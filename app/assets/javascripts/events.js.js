// Generated by CoffeeScript 1.9.1
var currentEvent, fillEventModalFields, flushEventModalFields, initializeCalendar, refetchEvents;

currentEvent = null;

initializeCalendar = function() {
  return $('#userCalendar').fullCalendar({
    schedulerLicenseKey: 'GPL-My-Project-Is-Open-Source',
    header: {
      left: 'today,prev,next',
      center: 'title',
      right: 'month,agendaWeek'
    },
    defaultView: 'month',
    editable: true,
    selectable: true,
    eventLimit: 3,
    events: '/events',
    dayClick: function(date, jsEvent, view) {
      currentEvent = new EventsTracker.Models.Event({
        startDate: moment(date).format('YYYY-MM-DD'),
        endDate: moment(date).format('YYYY-MM-DD')
      });
      return $('#popupEvent').modal('show');
    },
    eventClick: function(calEvent, jsEvent, view) {
      currentEvent = new EventsTracker.Models.Event({
        id: calEvent.id,
        title: calEvent.title,
        repeat_interval: calEvent.repeat_interval,
        startDate: moment(calEvent.start).format('YYYY-MM-DD'),
        startTime: moment(calEvent.start).format('HH:mm'),
        endDate: moment(calEvent.end).format('YYYY-MM-DD'),
        endTime: moment(calEvent.end).format('HH:mm')
      });
      $('#deleteEventBtn').removeClass('hide');
      $('#popupEventHeader').text("Event's editing");
      return $.getJSON('/events/get_same.json?id=' + currentEvent.get('id'), function(data) {
        if (_.any(data)) {
          currentEvent.set('has_same', true);
        }
        return $('#popupEvent').modal('show');
      });
    }
  });
};

fillEventModalFields = function() {
  if (currentEvent) {
    $('#title').val(currentEvent.get('title'));
    $('#startDate').val(currentEvent.get('startDate'));
    $('#startTime').val(currentEvent.get('startTime'));
    $('#endDate').val(currentEvent.get('endDate'));
    $('#endTime').val(currentEvent.get('endTime'));
    if (currentEvent.get('repeat_interval')) {
      $('#markedAsPeriodic').prop('checked', true);
      $('.end-series-date-area').removeClass('hide');
    }
    if (currentEvent.get('has_same') && currentEvent.get('has_same') === true) {
      return $('.bulk-update-area').removeClass('hide');
    }
  }
};

flushEventModalFields = function() {
  $('#title').val('');
  $('#startDate').val('');
  $('#startTime').val('');
  $('#endDate').val('');
  $('#endTime').val('');
  $('#markedAsPeriodic').prop('checked', false);
  $('.end-series-date-area').addClass('hide');
  return $('.bulk-update-area').addClass('hide');
};

refetchEvents = function() {
  return $('#userCalendar').fullCalendar('refetchEvents');
};

$(function() {
  if (EventsTracker.Services.isUserSignIn()) {
    initializeCalendar();
  }
  $('#popupEvent').on('show.bs.modal', function(e) {
    return fillEventModalFields();
  });
  $('#popupEvent').on('hidden.bs.modal', function(e) {
    return flushEventModalFields();
  });
  $('#markedAsPeriodic').bind('change', function(e) {
    return $('.end-series-date-area').toggleClass('hide');
  });
  $('#startDate').datepicker({
    dateFormat: 'yy-mm-dd',
    onSelect: function(dateText) {
      return $('#endDate').datepicker('option', 'minDate', $(this).datepicker('getDate'));
    }
  });
  $('#endDate').datepicker({
    dateFormat: 'yy-mm-dd',
    onSelect: function(dateText) {
      $('#startDate').datepicker('option', 'maxDate', $(this).datepicker('getDate'));
      return $('#endDateOfSeries').datepicker('option', 'minDate', $(this).datepicker('getDate'));
    }
  });
  $('#endDateOfSeries').datepicker({
    dateFormat: 'yy-mm-dd'
  });
  $('#eventForm').on('submit', function(e) {
    var seriesEnd;
    e.preventDefault();
    currentEvent.set('title', $('#title').val());
    currentEvent.set('startDate', $('#startDate').val());
    currentEvent.set('startTime', $('#startTime').val());
    currentEvent.set('endDate', $('#endDate').val());
    currentEvent.set('endTime', $('#endTime').val());
    if ($('#markedAsPeriodic').prop('checked')) {
      currentEvent.set('series_end', $('#endDateOfSeries').val());
      currentEvent.set('repeat_interval', $('#repeatInterval').val());
    }
    console.log(currentEvent.toJSON());
    if (currentEvent.isNew()) {
      seriesEnd = currentEvent.get('series_end');
      if (seriesEnd) {
        currentEvent.save(null, {
          url: currentEvent.url() + ("?series_end=" + seriesEnd)
        }).then(function(d) {
          return console.log(d);
        });
      } else {
        currentEvent.save().then(function(d) {
          return console.log(d);
        });
      }
    } else {
      console.log(currentEvent.url());
    }
    currentEvent = null;
    refetchEvents();
    return $('#popupEvent').modal('hide');
  });
  return $('#deleteEventBtn').on('click', function(e) {
    e.preventDefault();
    if (currentEvent.get('has_same') && $('input[name=updateOptions]:checked').val() === 'all') {
      currentEvent.destroy({
        data: {
          delete_same: true
        },
        processData: true
      });
    } else {
      currentEvent.destroy();
    }
    refetchEvents();
    return $('#popupEvent').modal('hide');
  });
});
