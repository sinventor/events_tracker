// Generated by CoffeeScript 1.9.1
$(function() {
  var $endDate, $endTime, $startDate, $startTime, ensureDateTimePeriodIsValid, flushEventFields;
  $startDate = $('#startDate');
  $startTime = $('#startTime');
  $endDate = $('#endDate');
  $endTime = $('#endTime');
  $('#startDate').datepicker({
    dateFormat: 'yy-mm-dd',
    onSelect: function(dateText) {
      $('#endDate').datepicker('option', 'minDate', $(this).datepicker('getDate'));
      return $('#endDateOfSeries').datepicker('option', 'minDate', $(this).datepicker('getDate'));
    }
  });
  $('#endDate').datepicker({
    dateFormat: 'yy-mm-dd',
    onSelect: function(dateText) {
      $('#startDate').datepicker('option', 'maxDate', $(this).datepicker('getDate'));
      return $('#endDateOfSeries').datepicker('option', 'minDate', $(this).datepicker('getDate'));
    }
  });
  $('#endDateOfSeries').datepicker({
    dateFormat: 'yy-mm-dd',
    onSelect: function(dateText) {
      $('#startDate').datepicker('option', 'maxDate', $(this).datepicker('getDate'));
      return $('#endDate').datepicker('option', 'maxDate', $(this).datepicker('getDate'));
    }
  });
  $('#startTime').val('15:00');
  $('#endTime').val('15:20');
  _.each(['startTime', 'endTime'], function(timeId) {
    return $('#' + timeId).on('focusout', function(e) {
      var $time, comp, comp2;
      comp = moment($('#startDate').val() + ' ' + $('#startTime').val());
      comp2 = moment($('#endDate').val() + ' ' + $('#endTime').val());
      $time = $('#' + timeId);
      if (!utils.checkTimeCorrectness($time.val())) {
        return $time.val('10:00');
      }
    });
  });
  _.each([$startDate, $startTime, $endDate, $endTime], function(stamp) {
    return stamp.on('focusout', function(e) {
      return ensureDateTimePeriodIsValid();
    });
  });
  ensureDateTimePeriodIsValid = function() {
    var end, endDate, endTime, start, startDate, startTime;
    startDate = $startDate.val();
    startTime = $startTime.val();
    endDate = $endDate.val();
    endTime = $endTime.val();
    start = startDate + (startTime != null ? ' ' + startTime : '');
    end = endDate + (endTime != null ? ' ' + endTime : '');
    if (moment(end).isBefore(moment(start))) {
      if (moment(startDate).isAfter(endDate)) {
        endDate = startDate;
        end = endDate + (endTime != null ? ' ' + endTime : '');
        console.log($endDate.val(startDate));
      }
      if (moment(start).isAfter(end)) {
        return $endTime.val($startTime.val());
      }
    }
  };
  $('#popupEvent').on('hidden.bs.modal', function() {
    return flushEventFields();
  });
  $('#markedAsPeriodic').bind('change', function(e) {
    return $('.end-series-date-area').toggleClass('hide');
  });
  return flushEventFields = function() {
    $('#title').val('');
    $('#startDate').val('');
    $('#startTime').val('14:00');
    $('#endTime').val('14:20');
    $('#endDateOfSeries').val('');
    $('#repeatInterval option[value=""]').prop('selected', 'selected');
    $('.end-series-date-area').addClass('hide');
    return $('.bulk-update-area').addClass('hide');
  };
});
